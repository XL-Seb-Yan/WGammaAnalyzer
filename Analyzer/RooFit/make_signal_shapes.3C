#include <TMath.h>
#include <TLegend.h>
void make_signal_shapes(int seed=37)
{
  using namespace RooFit;
  RooRandom::randomGenerator()->SetSeed(37); 
  TCanvas *c1 = new TCanvas("c1","c1",1200,900);
  c1->SetLogy();

  // --- Create workspace --- 
  RooWorkspace w("w","w");
  Double_t signalmass = 800;
  RooRealVar sys_invmass("sys_invmass","invmass",600,1000,""); //the name "sys_invmass" will be used by RooDataSet to import data
  sys_invmass.setBins(40);

  //--- signal PDF ---
  RooRealVar* mean = new RooRealVar("CB_mean","mean",signalmass,signalmass-50,signalmass+50,"");
  RooRealVar* CBsigma = new RooRealVar("CB_sigma","CBsigma",30,0,60,"");
  RooRealVar* Gaussigma = new RooRealVar("Gaus_sigma","Gaussigma",50,0,100,"");
  RooRealVar* alpha = new RooRealVar("CB_alpha","alpha",1,0,3,"");
  RooRealVar* n = new RooRealVar("CB_n","n",125,50,200,"");
  //RooRealVar* frac = new RooRealVar("Gaus_frac","frac",0.7,0,1); 
  RooRealVar* CBNs = new RooRealVar("CB_Ns","CBN_{s}",3500,2000,6000,"events");
  RooRealVar* GausNs = new RooRealVar("Gaus_Ns","GausN_{s}",50,0,1000,"events");
  RooGaussian* Gaus = new RooGaussian("Gaus","Gaus",sys_invmass,*mean,*Gaussigma);
  RooCBShape* CBShape = new RooCBShape("CBShape","Cystal Ball Function",sys_invmass,*mean,*CBsigma,*alpha,*n);
  RooAddPdf* ex_Sum = new RooAddPdf("Sum_ex","",RooArgList(*CBShape),RooArgList(*CBNs));
  w.import(*ex_Sum);

  //--- background PDF ---
  /*
  RooRealVar *pC = new RooRealVar("pol2_pC","C",1,0,100,"");
  pC->setConstant(kFALSE);
  RooRealVar *p0 = new RooRealVar("pol2_p0","p_0",-0.1,-1,0,"");
  p0->setConstant(kFALSE);
  RooRealVar *Nbkg   = new RooRealVar("pol2_Nbkg","N_{bkg}",500,0,2000,"events");
  Nbkg->setConstant(kFALSE);
  RooExponential* expo = new RooExponential("expo","",sys_invmass,*p0);
  RooAddPdf* ex_expo = new RooAddPdf("expo_ex","",RooArgList(*expo),RooArgList(*Nbkg));
  w.import(*ex_expo);
  */

  //--- combine PDF ---
  /*
  RooAddPdf* ex_sum = new RooAddPdf("SUM_ex","",RooArgList(*expo,*gauss1),RooArgList(*Nbkg,*Ns));
  w.import(*ex_sum);
  */
  
  // --- Import unbinned dataset ---
  TFile file("/afs/cern.ch/work/x/xuyan/work5/PROD17/CMSSW_9_4_9/src/WGammaAnalyzer/Analyzer/Signal800N_Wwindow.root");
  TTree* tree = (TTree*)file.Get("Events");
  RooArgList imarglist(sys_invmass);
  RooArgSet imargset(imarglist);
  RooDataSet data("Signal MC","Signal MC",imargset,Import(*tree));//import branches with names match the "variable name" (not variable) listed in imargset

  // --- Perform extended ML fit of composite PDF to toy data ---
  //w.pdf("model_s")->fitTo(data);
  //sys_invmass.setRange("SB1",1.47682,1.67682);
  //sysinvmass.setRange("SB2",1.87682,2.07682);
  //RooFitResult *r = ex_bern->fitTo(data,Range("SB1,SB2"),Save());
  RooFitResult *r = ex_Sum->fitTo(data,Save());

  // --- Plot ---
  gStyle->SetOptStat(111111);
  RooPlot *frame = sys_invmass.frame();
  data.plotOn(frame);
  frame->SetTitle("WGamma M-800 MC");
  ex_Sum->plotOn(frame,LineColor(kBlack),RooFit::Name("sigfun"));
  ex_Sum->plotOn(frame,VisualizeError(*r,1),FillColor(kOrange),RooFit::Name("err"));
  ex_Sum->plotOn(frame,LineColor(kBlack),RooFit::Name("sigfun"));
  //ex_Sum->plotOn(frame,Components("CBShape"),LineColor(kRed),RooFit::Name("CBfun"));
  //ex_Sum->plotOn(frame,Components("Gaus"),LineColor(kBlue),RooFit::Name("Gausfun"));
  //ex_bern->plotOn(frame,LineColor(kRed),RooFit::Name("sigfun"));
  //ex_CB->plotOn(frame,Components("expo"),LineStyle(kDashed),RooFit::Name("bkgfun"));
  data.plotOn(frame);
  //w.pdf("model_s")->plotOn(frame,Components("Bern"),LineStyle(kDashed));

  //axis,log scale and range setting functions must be called after all plotOn functions being called
  TAxis* xaxis = frame->GetXaxis();
  TAxis* yaxis = frame->GetYaxis();
  xaxis->SetTitle("m_{W#gamma} (GeV)");
  xaxis->SetTitleOffset(1.2);
  yaxis->SetTitle("Events");
  yaxis->SetTitleOffset(1.2);
  frame->SetMaximum(1000);
  frame->SetMinimum(0.1);
  frame->Draw();
  TLegend *l =  new TLegend(0.6,0.7,0.8,0.78);
  l->AddEntry(frame->findObject("sigfun"),"Signal Fit","l");
  //l->AddEntry(frame->findObject("bkgfun"),"Background Fit","l");
  l->AddEntry(frame->findObject("err"),"Fit Error 1 #sigma","f");
  //l->Draw("same");
  c1->Print("data.png");
  
  // --- Output root file ---
  /*
  RooWorkspace *wUP = new RooWorkspace("wUP","wUP");
  wUP->var("sys_invmass[400,2000]");
  wUP->import(data,Rename("MC"));
  wUP->import(*gauss1);
  wUP->import(*expo);
  wUP->writeToFile("SignalMC1600-shapes-UnbinnedParam.root");
  */
}
